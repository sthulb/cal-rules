[tool.poetry]
name = "calrules"
version = "0.1.2"
description = ""
authors = ["Simon Thulbourn"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
rule-engine = "^3.2.0"
PyYAML = "^6.0.2"
yamale = "^3.0.6"
exchangelib = "3.3.2"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
pytest-cov = "^2.11.1"
flake8 = "^3.9.2"
flake8-variables-names = "^0.0.4"
flake8-isort = "^4.0.0"
flake8-fixme = "^1.1.1"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.5.0"
flake8-black = "^0.2.1"
black = "^21.5b1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
calrules = "calrules.__main__:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -vv"
testpaths = "./tests"
markers = "perf: marks perf tests to be deselected (deselect with '-m \"not perf\"')"

[tool.coverage.run]
source = ["calrules"]
omit = ["tests/*"]
branch = true

[tool.coverage.report]
fail_under = 90
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = "test_report"
title = "Cal Rules Test Coverage"